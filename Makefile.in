# $Id: Makefile.in,v 1.20 2012/06/13 13:50:16 imilh Exp $

PROG=		pkgin
MAN=		pkgin.1
VERSION=	@PACKAGE_VERSION@
SRCS=		main.c summary.c tools.c pkgindb.c depends.c actions.c \
		pkglist.c download.c order.c impact.c autoremove.c fsops.c \
		pkgindb_queries.c pkg_str.c sqlite_callbacks.c selection.c \
		pkg_check.c pkg_infos.c preferred.c
# included from libinstall
SRCS+=		automatic.c dewey.c fexec.c global.c opattern.c pkgdb.c var.c
# included from openssh
SRCS+=		progressmeter.c

SRCS+=		@SRCS@

DPSRCS=	pkgindb_create.h

CC=		@CC@
INSTALL=	@INSTALL@

OPSYS!=		uname
OS_VER!=	uname -r
OS_ARCH!=	uname -p

# satisfy mk.conf
BSD_PKG_MK=	1
.for MK_CONF in /etc/mk.conf @prefix@/etc/mk.conf /etc/pkgsrc.conf
.	if exists(${MK_CONF})
.		include "${MK_CONF}"
.	endif
.endfor

LOCALBASE?=		@prefix@
BINDIR?=		${LOCALBASE}/bin
PKG_SYSCONFDIR?=	${LOCALBASE}/etc
VARBASE?=		/var
PKG_DBDIR?=		${VARBASE}/db/pkg
.if !defined(PKGMANDIR)
MANDIR=		${LOCALBASE}/share/man
.endif

# read pkginstall-prefix from configure if any
.if "@PKGTOOLS@"
PKGTOOLS?=	@PKGTOOLS@
.endif

.if ${OPSYS} == "Minix"
PKGTOOLS?=	${PKG_TOOLS_BIN}
CPPFLAGS+=	-D_NETBSD_SOURCE -D_MINIX
.else
PKGTOOLS?=	${LOCALBASE}/sbin
.endif

PKGIN_VERSION=	"${VERSION} for ${OPSYS}-${OS_VER} ${OS_ARCH}"

CPPFLAGS+=	-DPKGIN_VERSION=\"${PKGIN_VERSION}\"

.include <bsd.own.mk>

.PATH:	external

.if defined(DEBUG)
CPPFLAGS+=	-DDEBUG
PKGIN_DB!=	pwd
.else
PKGIN_DB=	${VARBASE}/db/pkgin
.endif

.if ${OPSYS} == "NetBSD"
WARNS=		2
CPPFLAGS+=	-DNETBSD
.endif

CPPFLAGS+=	@CPPFLAGS@
CPPFLAGS+=	-g

CPPFLAGS+=	-DLOCALBASE=\"${LOCALBASE}\" 			\
		-DPKG_SYSCONFDIR=\"${PKG_SYSCONFDIR}\"		\
		-DPKG_DBDIR="\"${PKG_DBDIR}\""			\
		-DDEF_LOG_DIR="\"${PKG_DBDIR}\""		\
		-DPKGIN_DB=\"${PKGIN_DB}\"			\
		-DPKGTOOLS=\"${PKGTOOLS}\"

CPPFLAGS+=	-DHAVE_CONFIG_H
CPPFLAGS+=	-D_LARGEFILE_SOURCE -D_LARGE_FILES
CPPFLAGS+=	-DCHECK_MACHINE_ARCH=\"${MACHINE_ARCH}\"
CPPFLAGS+=	-Iexternal -I. -I${LOCALBASE}/include

LDFLAGS+=	@LDFLAGS@

LDADD+=		-L${LOCALBASE}/lib @RPATH@,${LOCALBASE}/lib	\
		-lbz2 -lz -larchive @LIBS@
LDADD+=		-lsqlite3

CLEANFILES+=	${DPSRCS}

pkgindb_create.h:
	@SEDCMD=@SED@ ./mkpkgindb.sh > pkgindb_create.h

README.md:	pkgin.1.ronn
	@SED@ -E -e 's/<([^\ \<]+)>/_\1_/g'				\
		-e 's/<([=0-9].+)/\&lt;\1/g;s/>([=0-9].+)/\&gt;\1/g'	\
		pkgin.1.ronn >README.md

afterinstall:	configinstall

beforeinstall:
	${INSTALL_DIR} -o ${BINOWN} -g ${BINGRP} -m 755 ${DESTDIR}${BINDIR}
	${INSTALL_DIR} -o ${BINOWN} -g ${BINGRP} -m 755			\
		${DESTDIR}${PKG_SYSCONFDIR}/pkgin
.if !defined(PKGMANDIR) # not installed via pkgsrc
.	for _mandir in cat1 html1 man1
		${INSTALL_DIR} -o ${BINOWN} -g ${BINGRP} -m 755		\
			${DESTDIR}${MANDIR}/${_mandir}
.	endfor
.endif

install:
.for _conf in repositories.conf preferred.conf
	test -f ${DESTDIR}${PKG_SYSCONFDIR}/pkgin/${_conf} ||		\
		${INSTALL_FILE} -o ${BINOWN} -g ${BINGRP} -m 644	\
			${_conf}
		${DESTDIR}${PKG_SYSCONFDIR}/pkgin/${_conf}
.endfor

deinstall:
	rm -f ${DESTDIR}${BINDIR}/pkgin
.for _mandir in cat1 html1 man1
	rm -f ${DESTDIR}${MANDIR}/${_mandir}/pkgin*
.endfor

# makes maintainer's life easier

.if defined(PKGIN_WIP)
WIPHOME=${PKGIN_WIP}
CURDATE!=date +%Y%m%d
WIPREV!=git log --pretty=format:'%H' -n 1
OLDREV!=sed -En 's/GHCOMMIT=[^0-9a-z]+([0-9a-z]+)/\1/p'			\
	${WIPHOME}/pkgin/Makefile
.endif

bump:
	rm -f ${WIPHOME}/pkgin/distinfo					\
		${WIPHOME}/../distfiles/pkgin-*				\
		${WIPHOME}/../distfiles/${OLDREV}*
	perl -pi -e "s/(GHCOMMIT=[\ \t]+).*/GHCOMMIT=\t\t${WIPREV}/"	\
		${WIPHOME}/pkgin/Makefile
	perl -pi -e "s/pkgin-[0-9\.]+/pkgin-@PACKAGE_VERSION@.${CURDATE}/"\
		${WIPHOME}/pkgin/Makefile
	cd ${WIPHOME}/pkgin && make makesum

.include <bsd.prog.mk>
